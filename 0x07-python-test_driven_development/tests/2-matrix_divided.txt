def matrix_divided(matrix, div):
    """
    Divide all elements of a matrix.

    Args:
        matrix (list): A list of lists of ints or floats.
        div (int/float): The divisor.

    Raises:
        TypeError: If the matrix contains non-numbers.
        TypeError: If the matrix contains rows of different sizes.
        TypeError: If div is not an int or float.
        ZeroDivisionError: If div is 0.

    Returns:
        A new matrix representing the result of the division.

    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

    >>> matrix = [[10, 20], [30, 40]]
    >>> div = 5
    >>> matrix_divided(matrix, div)
    [[2.0, 4.0], [6.0, 8.0]]

    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 'nine']]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> div = 'two'
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> div = 0
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
    """
    if (not isinstance(matrix, list) or matrix == [] or
            not all(isinstance(row, list) for row in matrix) or
            not all((isinstance(ele, int) or isinstance(ele, float))
                    for ele in [num for row in matrix for num in row])):
        raise TypeError("matrix must be a matrix (list of lists) of "
                        "integers/floats")

    if not all(len(row) == len(matrix[0]) for row in matrix):
        raise TypeError("Each row of the matrix must have the same size")

    if not isinstance(div, int) and not isinstance(div, float):
        raise TypeError("div must be a number")

    if div == 0:
        raise ZeroDivisionError("division by zero")

    return ([list(map(lambda x: round(x / div, 2), row)) for row in matrix])
